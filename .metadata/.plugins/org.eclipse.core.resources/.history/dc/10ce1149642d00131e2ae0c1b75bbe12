import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Rotation extends JPanel{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;	
	
	private Rectangle rect;
	private AffineTransform at;
	private double angle;
	private int length;
	private int event;//0= rotating in center
					//1= turning 45 degrees and move 100 pixel
	private int frameSize;
	private int maxDist;
	private int maxAngle;
	
	public Rotation(int s){
		rect = new Rectangle(0, 0, 50, 50);
		at = new AffineTransform();
		at.translate(s/2, s/2);
		angle =0;
		length=0;
		event = 0;
		frameSize=s;
		maxDist=100;
		maxAngle=45;
	}
	public void setEvent(int i){
		event=i;
	}
	public void paintComponent(Graphics g){
		if (event ==0){
			Graphics2D g2 = (Graphics2D) g;
			Color c= g2.getColor();
			g2.setColor(getBackground());
			g2.fillRect(0,0,this.getWidth(),this.getHeight());
			g2.setColor(c);
			g2.transform(at);
			AffineTransform rotate = new AffineTransform();
			
			rotate.setToRotation(Math.toRadians(angle));
			rotate.translate(-rect.getWidth()/2, -rect.getHeight()/2);
			angle++;
			g2.transform(rotate);
			g2.draw(rect);
		}
		else if (event ==1){
			Graphics2D g2 = (Graphics2D) g;
			Color c= g2.getColor();
			g2.setColor(getBackground());
			g2.fillRect(0,0,this.getWidth(),this.getHeight());
			g2.setColor(c);
			g2.transform(at);
			
			if(angle!=maxAngle && angle !=-maxAngle){
				AffineTransform rotate = new AffineTransform();
			
				
				if(angle>=0){
					rotate.setToRotation(Math.toRadians(angle));
					rotate.translate(-rect.getWidth()/2, -rect.getHeight()/2);
					angle++;
				}
				else{
					rotate.setToRotation(maxAngle+Math.toRadians(angle));
					rotate.translate(-rect.getWidth()/2, -rect.getHeight()/2);
					angle--;
						
				}
				g2.transform(rotate);
				g2.draw(rect);
			}
			else if(length!=maxDist && length!=-maxDist)
			{
				AffineTransform move = new AffineTransform();
				
				move.translate(length, length);
				if(length>=0)
					length++;
				else
					length--;
				
				g2.transform(move);
				g2.draw(rect);
			}
			else if(length==maxDist&&angle==maxAngle)
			{
				angle=-1;
				length=-1;
			}
			else if(length==-maxDist&&angle==-maxAngle)
			{
				angle=0;
				length=0;
			}
			
		}
	}


	public static void main(String[] args){
		JFrame frame = new JFrame("Rotation");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		int frameSize=500;
		Rotation r = new Rotation(frameSize);
		frame.getContentPane().add( BorderLayout.CENTER, r );
		frame.setSize( frameSize, frameSize );
        frame.setVisible(true);
        
        r.setEvent(1);
        
        while(true)
        {
        	r.repaint();
        	try {
				Thread.sleep(10);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
        }
	}

	
}


